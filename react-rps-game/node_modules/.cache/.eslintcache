[{"/Users/isoyeon/Documents/Github/react-rps-game/react-rps-game/src/index.js":"1","/Users/isoyeon/Documents/Github/react-rps-game/react-rps-game/src/App.js":"2","/Users/isoyeon/Documents/Github/react-rps-game/react-rps-game/src/reportWebVitals.js":"3","/Users/isoyeon/Documents/Github/react-rps-game/react-rps-game/src/component/Box.js":"4"},{"size":535,"mtime":1664373531962,"results":"5","hashOfConfig":"6"},{"size":1996,"mtime":1664373531962,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":1664373531963,"results":"8","hashOfConfig":"6"},{"size":596,"mtime":1664373531962,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"p17ndm",{"filePath":"13","messages":"14","suppressedMessages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},"/Users/isoyeon/Documents/Github/react-rps-game/react-rps-game/src/index.js",[],[],"/Users/isoyeon/Documents/Github/react-rps-game/react-rps-game/src/App.js",["24","25","26"],[],"import Box from \"./component/Box\";\nimport './App.css'\nimport { useState } from \"react\";\n\nconst choise = {\n  rock: {\n    name: \"Rock\",\n    img: process.env.PUBLIC_URL + \"/img/rock.png\"\n  },\n  scissor: {\n    name: \"Scissor\",\n    img: process.env.PUBLIC_URL + \"/img/scissor.png\"\n  },\n  paper: {\n    name: \"Paper\",\n    img: process.env.PUBLIC_URL + \"/img/paper.png\"\n  },\n}\n\nfunction App() {\n  const [userSelect, setUserSelect] = useState(choise['rock']);\n  const [comSelect, setComSelect] = useState(choise['rock']);\n  const [result, setResult] = useState(\"\");\n\n  const playerClick = (userChoise) => {\n    setUserSelect(choise[userChoise]);\n    let computer = randomChoise();\n    setComSelect(computer);\n\n    setResult(judgement(choise[userChoise].name, computer.name));\n  }\n\n  const randomChoise = () => {\n    let itemArr = Object.keys(choise);\n    let randomNum = Math.floor(Math.random() * itemArr.length);\n\n    return choise[itemArr[randomNum]];\n  }\n\n  const judgement = (user, computer) => {\n    if (user === computer) {\n      return \"비김\"\n    } else if (user === \"Rock\") {\n      return computer === \"Scissor\" ? \"승리\" : \"패배\"\n    } else if (user === \"Scissor\") {\n      return computer === \"Paper\" ? \"승리\" : \"패배\"\n    } else {\n      return computer === \"Rock\" ? \"승리\" : \"패배\"\n    }\n  }\n\n  return (\n    <div>\n      <div className=\"main\">\n        <Box title=\"플레이어\" item={userSelect} result={result} />\n        <Box title=\"컴퓨터\" item={comSelect} result={result} />\n      </div>\n      <h3>하나를 선택해주세요.</h3>\n      <div className=\"main\">\n        <img src={process.env.PUBLIC_URL + \"/img/scissor.png\"} className=\"button\" onClick={() => playerClick('scissor')} />\n        <img src={process.env.PUBLIC_URL + \"/img/rock.png\"} className=\"button\" onClick={() => playerClick('rock')} />\n        <img src={process.env.PUBLIC_URL + \"/img/paper.png\"} className=\"button\" onClick={() => playerClick('paper')} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;","/Users/isoyeon/Documents/Github/react-rps-game/react-rps-game/src/reportWebVitals.js",[],[],"/Users/isoyeon/Documents/Github/react-rps-game/react-rps-game/src/component/Box.js",["27"],[],"import React from 'react';\n\nconst Box = (props) => {\n    const { title, item, result } = props;\n\n    let data;\n\n    if (result !== \"\" && title === \"컴퓨터\" && result !== \"비김\") { \n        data = result === \"승리\" ? \"패배\" : \"승리\"\n    } else {\n        data = result;\n    }\n\n    const imgName = (data === \"승리\" ? \"win\" : data === \"패배\" ? \"lose\" : \"tie\");\n\n    return (\n        <div className='box'>\n            <h1>{title}</h1>\n            <img className={`item-img ${imgName}`} src={item && item.img} />\n            <h2>{data}</h2>\n        </div>\n    );\n};\n\nexport default Box;\n",{"ruleId":"28","severity":1,"message":"29","line":60,"column":9,"nodeType":"30","endLine":60,"endColumn":124},{"ruleId":"28","severity":1,"message":"29","line":61,"column":9,"nodeType":"30","endLine":61,"endColumn":118},{"ruleId":"28","severity":1,"message":"29","line":62,"column":9,"nodeType":"30","endLine":62,"endColumn":120},{"ruleId":"28","severity":1,"message":"29","line":19,"column":13,"nodeType":"30","endLine":19,"endColumn":77},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]